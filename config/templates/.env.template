# =============================================================================
# Claude Guardian - Comprehensive Environment Variables Template
# Single Source of Truth for All Environment Configuration
# =============================================================================
# 
# IMPORTANT: Copy this file to .env and configure your values
# Security Note: Never commit your .env file to version control!
# 
# =============================================================================

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Application environment (development, staging, production)
ENVIRONMENT=production

# Application name and version
APP_NAME=Claude Guardian
APP_VERSION=2.0.0-alpha

# Main application server configuration
HOST=0.0.0.0
PORT=8083

# Service configuration
WORKERS=4
DEBUG=false
RELOAD=false

# MCP (Model Context Protocol) Configuration
# Standardized to use same port as main app
MCP_PORT=8083
MCP_HOST=0.0.0.0
MCP_MAX_CONNECTIONS=100
MCP_TIMEOUT=30

# Guardian operational mode
GUARDIAN_MODE=full
DEVELOPMENT_MODE=false

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL Database Settings
POSTGRES_DB=claude_guardian
POSTGRES_USER=cguser
POSTGRES_PASSWORD=GENERATE_SECURE_PASSWORD_HERE

# Standardized PostgreSQL Connection URL (asyncpg for async operations)
DATABASE_URL=postgresql+asyncpg://cguser:${POSTGRES_PASSWORD}@localhost:5432/claude_guardian

# Connection pool settings
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_CONNECTION_TIMEOUT=30
DB_POOL_TIMEOUT=60
DB_SSL_REQUIRE=true

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis Configuration
REDIS_PASSWORD=GENERATE_SECURE_PASSWORD_HERE
REDIS_URL=redis://:${REDIS_PASSWORD}@localhost:6379/0
REDIS_MAX_CONNECTIONS=50
REDIS_SOCKET_TIMEOUT=30

# =============================================================================
# VECTOR DATABASE CONFIGURATION
# =============================================================================
# Qdrant Vector Database
QDRANT_URL=http://localhost:6333
QDRANT_API_KEY=optional_qdrant_api_key_for_auth
QDRANT_DATA_PATH=./data/qdrant

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# JWT Configuration
JWT_SECRET=GENERATE_JWT_SECRET_KEY_HERE
JWT_ALGORITHM=HS256
JWT_EXPIRATION=3600
SECRET_KEY=GENERATE_JWT_SECRET_KEY_HERE

# Password Security
BCRYPT_ROUNDS=12
MAX_LOGIN_ATTEMPTS=5

# Session Configuration
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7
SESSION_TIMEOUT_MINUTES=60
LOCKOUT_DURATION_MINUTES=30

# Security Level (strict, moderate, permissive)
SECURITY_LEVEL=moderate

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Logging format and handlers
LOG_FORMAT=json
ENABLE_DEBUG_LOGGING=false

# =============================================================================
# THREAT ANALYSIS CONFIGURATION
# =============================================================================
# ML Analysis Settings
DETECTION_THRESHOLD=0.75
MAX_SCAN_SIZE=1048576
ENABLE_ML_ANALYSIS=true
ENABLE_VECTOR_SEARCH=true
VECTOR_SIMILARITY_THRESHOLD=0.8

# Embedding Configuration
EMBEDDING_MODEL=all-MiniLM-L6-v2

# =============================================================================
# EXTERNAL SERVICES CONFIGURATION
# =============================================================================
# LightRAG Service (if used)
LIGHTRAG_URL=http://localhost:8000

# =============================================================================
# MONITORING AND METRICS
# =============================================================================
# Monitoring Configuration
ENABLE_MONITORING=true
METRICS_PORT=9090
ENABLE_TRACING=true
ENABLE_PROFILING=false
HEALTH_CHECK_INTERVAL=30

# External Monitoring Services
JAEGER_ENDPOINT=
PROMETHEUS_GATEWAY=
ALERTMANAGER_URL=
SYSLOG_ADDRESS=

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================
# SMTP Configuration
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
FROM_EMAIL=
EMAIL_RATE_LIMIT_PER_HOUR=1000

# =============================================================================
# CLOUD SERVICES CONFIGURATION (AWS)
# =============================================================================
# AWS Configuration
AWS_DEFAULT_REGION=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_S3_BUCKET=
CLOUDFRONT_DISTRIBUTION=

# File Upload Configuration
UPLOAD_PATH=/tmp/uploads
MAX_SIZE_MB=100
ENABLE_VIRUS_SCAN=true
CDN_URL=

# Backup Configuration
BACKUP_S3_BUCKET=
BACKUP_RETENTION_DAYS=90
BACKUP_ENCRYPTION_ENABLED=true

# =============================================================================
# TASK QUEUE CONFIGURATION (CELERY)
# =============================================================================
# Celery Broker and Backend (using Redis)
CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@localhost:6379/1
CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@localhost:6379/2

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
# Rate Limiting
RATE_LIMIT_PER_MINUTE=30
RATE_LIMIT_BURST=5
RATE_LIMIT_ENABLED=true

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Registration and Authentication Features
ENABLE_REGISTRATION=false
ENABLE_PASSWORD_RESET=true
ENABLE_EMAIL_VERIFICATION=true
ENABLE_2FA=true
ENABLE_API_VERSIONING=true
ENABLE_DEBUG_ENDPOINTS=false
ENABLE_TEST_DATA_SEEDING=false
ENABLE_ADMIN_PANEL=true

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Connection and Performance Settings
MAX_CONNECTIONS=100
CONNECTION_POOL_SIZE=100
MAX_CONCURRENT_REQUESTS=1000
RESPONSE_TIMEOUT=30
CACHE_TTL=3600
ENABLE_COMPRESSION=true
COMPRESSION_LEVEL=6

# Vector and Model Caching
VECTOR_CACHE_SIZE=1000
THREAT_MODEL_CACHE_TTL=3600

# =============================================================================
# COMPLIANCE AND AUDIT
# =============================================================================
# Data Retention and Compliance
AUDIT_RETENTION_DAYS=90
DATA_RETENTION_DAYS=2555
COMPLIANCE_MODE=standard
GDPR_ENABLED=false
HIPAA_COMPLIANCE=false
AUDIT_LOGGING=true
ENCRYPTION_AT_REST=true
ENCRYPTION_IN_TRANSIT=true

# =============================================================================
# ALERT AND NOTIFICATION CONFIGURATION
# =============================================================================
# Webhook and Alert Configuration
ALERT_WEBHOOK_URL=
SLACK_WEBHOOK_URL=
PAGERDUTY_INTEGRATION_KEY=
EMAIL_ALERTS=true
SMS_ALERTS=false

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================
# SIEM Integration
SIEM_INTEGRATION_ENABLED=false
SIEM_ENDPOINT=
SIEM_API_KEY=

# =============================================================================
# DEVELOPMENT AND TESTING CONFIGURATION
# =============================================================================
# Development-specific settings
MOCK_THREAT_FEEDS=false
CLEANUP_AFTER_TESTS=true
MOCK_EXTERNAL_APIS=false

# Test Database Configuration
TEST_DATABASE_URL=postgresql+asyncpg://test:test@localhost:5432/test_claude_guardian
TEST_REDIS_URL=redis://localhost:6379/15

# =============================================================================
# QUICK SETUP GUIDE
# =============================================================================
# 1. Copy this file to .env: cp .env.template .env
# 2. Generate secure passwords:
#    - For PostgreSQL: openssl rand -base64 32
#    - For Redis: openssl rand -base64 32
#    - For JWT: openssl rand -base64 32
# 3. Update the password fields above with your generated values
# 4. Configure your environment-specific settings
# 5. Start services: docker-compose up -d
#
# SECURITY REMINDERS:
# - Use strong, unique passwords for all services
# - Never use default passwords in production
# - Regularly rotate secrets and passwords
# - Keep this file secure and never commit .env to version control
# - Use environment-specific configurations for different deployments