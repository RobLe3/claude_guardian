# Staging Environment Configuration

app:
  name: "IFF-Guardian"
  environment: "staging"
  debug: false
  reload: false
  log_level: "INFO"
  version: "1.3.2-staging"

server:
  host: "0.0.0.0"
  port: 8000
  workers: 2
  timeout: 60
  keep_alive: 5

database:
  url: "${DATABASE_URL}"
  pool_size: 10
  max_overflow: 20
  echo: false
  echo_pool: false
  ssl_require: true

redis:
  url: "${REDIS_URL}"
  password: "${REDIS_PASSWORD}"
  ssl: true
  max_connections: 20
  retry_on_timeout: true

security:
  secret_key: "${SECRET_KEY}"
  algorithm: "HS256"
  access_token_expire_minutes: 30
  refresh_token_expire_days: 7
  password_requirements:
    min_length: 8
    require_uppercase: true
    require_lowercase: true
    require_digits: true
    require_special_chars: true

cors:
  origins:
    - "https://staging.iff-guardian.com"
    - "https://staging-admin.iff-guardian.com"
  credentials: true
  methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS", "PATCH"]
  headers: ["Authorization", "Content-Type", "X-Requested-With"]

logging:
  level: "INFO"
  format: "json"
  handlers:
    - type: "console"
      level: "INFO"
    - type: "file"
      level: "WARNING"
      filename: "/var/log/iff-guardian/staging.log"
      max_bytes: 52428800  # 50MB
      backup_count: 10

monitoring:
  enable_metrics: true
  metrics_port: 9090
  enable_tracing: true
  enable_profiling: false
  health_check_interval: 30
  jaeger_endpoint: "${JAEGER_ENDPOINT}"

features:
  enable_registration: true
  enable_password_reset: true
  enable_email_verification: true
  enable_2fa: true
  enable_api_versioning: true
  enable_debug_endpoints: false
  enable_test_data_seeding: false

external_apis:
  timeout: 30
  retry_attempts: 3
  retry_delay: 2
  circuit_breaker_enabled: true

file_upload:
  max_size_mb: 25
  allowed_types: ["pdf", "doc", "docx", "txt", "jpg", "png", "gif", "json", "xml", "csv"]
  upload_path: "${UPLOAD_PATH}"
  enable_virus_scan: true
  s3_bucket: "${AWS_S3_BUCKET}"

rate_limiting:
  per_minute: 60
  burst: 10
  enabled: true

celery:
  broker_url: "${CELERY_BROKER_URL}"
  result_backend: "${CELERY_RESULT_BACKEND}"
  task_serializer: "json"
  result_serializer: "json"
  accept_content: ["json"]
  timezone: "UTC"
  enable_utc: true
  worker_prefetch_multiplier: 4
  task_acks_late: true
  task_routes:
    "iff_guardian.tasks.heavy_computation": {"queue": "heavy"}
    "iff_guardian.tasks.notifications": {"queue": "notifications"}

email:
  smtp_host: "${SMTP_HOST}"
  smtp_port: "${SMTP_PORT}"
  smtp_user: "${SMTP_USER}"
  smtp_password: "${SMTP_PASSWORD}"
  use_tls: true
  use_ssl: false
  from_email: "${FROM_EMAIL}"

aws:
  region: "${AWS_DEFAULT_REGION}"
  access_key_id: "${AWS_ACCESS_KEY_ID}"
  secret_access_key: "${AWS_SECRET_ACCESS_KEY}"
  s3_bucket: "${AWS_S3_BUCKET}"

backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention_days: 30
  s3_backup_bucket: "${BACKUP_S3_BUCKET}"